import {
  GetEnvInfo,
  UploadEnvLevelsAsync,
  UploadEnvSpherical
} from "./chunk-D5FWYYNY.js";
import "./chunk-SOWEULQT.js";
import "./chunk-7LC7CQRM.js";
import "./chunk-WXCFXYXD.js";
import "./chunk-F6WBBMTV.js";
import "./chunk-OCEAH6DF.js";
import "./chunk-T2KPYHB2.js";
import "./chunk-GFXF2AHA.js";
import "./chunk-TOAF46MT.js";
import "./chunk-M53QMGBN.js";
import "./chunk-6W4IL5BZ.js";
import "./chunk-GJUHN7CQ.js";
import "./chunk-TXNJXLHN.js";
import "./chunk-UQXX2ELX.js";
import "./chunk-HCQBYAVY.js";
import "./chunk-TTTM2ZA3.js";
import "./chunk-ELOAAAB7.js";
import "./chunk-MVDNDG2U.js";
import "./chunk-WAGTS43G.js";
import "./chunk-223YIK35.js";
import "./chunk-P73WYAUZ.js";
import "./chunk-WIS6O5TF.js";
import "./chunk-4U4OQIRL.js";
import "./chunk-WV5WMLKG.js";
import "./chunk-LMHNSSMV.js";
import "./chunk-ULVTKDIK.js";
import "./chunk-SZB5QSYK.js";
import "./chunk-HH35OB2V.js";
import "./chunk-SQLRS6BV.js";
import "./chunk-3ZXVYKCB.js";
import "./chunk-4OJANHPM.js";
import "./chunk-MMDFH52S.js";
import "./chunk-S3STKA5Z.js";
import "./chunk-HLDBRION.js";
import "./chunk-2EVLQBBY.js";
import "./chunk-AAYY4GXB.js";
import "./chunk-VR3O2TRF.js";
import "./chunk-2BVSSZO5.js";
import "./chunk-RHOADBW3.js";
import "./chunk-ZRPHACZ5.js";
import "./chunk-TROWLGN2.js";
import "./chunk-NOD22NBO.js";
import "./chunk-5LTYGTJL.js";
import "./chunk-T7C6CI7L.js";
import "./chunk-2ZEUD233.js";
import "./chunk-7XY2OFQB.js";
import "./chunk-I2PO3XEU.js";
import "./chunk-I4NFOKIT.js";
import "./chunk-FCN7ZBEY.js";
import "./chunk-OWCZTH5B.js";
import "./chunk-CZRRPEW3.js";
import "./chunk-J4DZ2XK7.js";
import "./chunk-FX6MN5HL.js";
import "./chunk-SAE7R3H2.js";
import "./chunk-MIVJKRRS.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-DDXCXL26.js";
import "./chunk-GCT36VBF.js";
import "./chunk-G3PMV62Z.js";

// node_modules/@babylonjs/core/Materials/Textures/Loaders/envTextureLoader.js
var _ENVTextureLoader = class {
  constructor() {
    this.supportCascades = false;
  }
  /**
   * Uploads the cube texture data to the WebGL texture. It has already been bound.
   * @param data contains the texture data
   * @param texture defines the BabylonJS internal texture
   * @param createPolynomials will be true if polynomials have been requested
   * @param onLoad defines the callback to trigger once the texture is ready
   * @param onError defines the callback to trigger in case of error
   */
  loadCubeData(data, texture, createPolynomials, onLoad, onError) {
    if (Array.isArray(data)) {
      return;
    }
    const info = GetEnvInfo(data);
    if (info) {
      texture.width = info.width;
      texture.height = info.width;
      try {
        UploadEnvSpherical(texture, info);
        UploadEnvLevelsAsync(texture, data, info).then(() => {
          texture.isReady = true;
          texture.onLoadedObservable.notifyObservers(texture);
          texture.onLoadedObservable.clear();
          if (onLoad) {
            onLoad();
          }
        }, (reason) => {
          onError?.("Can not upload environment levels", reason);
        });
      } catch (e) {
        onError?.("Can not upload environment file", e);
      }
    } else if (onError) {
      onError("Can not parse the environment file", null);
    }
  }
  /**
   * Uploads the 2D texture data to the WebGL texture. It has already been bound once in the callback.
   */
  loadData() {
    throw ".env not supported in 2d.";
  }
};
export {
  _ENVTextureLoader
};
//# sourceMappingURL=envTextureLoader-UWTESKMS.js.map

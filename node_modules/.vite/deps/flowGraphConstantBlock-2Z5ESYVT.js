import {
  FlowGraphBlock,
  defaultValueSerializationFunction,
  getRichTypeFromValue
} from "./chunk-4JKITRJZ.js";
import "./chunk-TROWLGN2.js";
import "./chunk-7XY2OFQB.js";
import "./chunk-SAE7R3H2.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-DDXCXL26.js";
import "./chunk-GCT36VBF.js";
import "./chunk-G3PMV62Z.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphConstantBlock.js
var FlowGraphConstantBlock = class extends FlowGraphBlock {
  constructor(config) {
    super(config);
    this.config = config;
    this.output = this.registerDataOutput("output", getRichTypeFromValue(config.value));
  }
  _updateOutputs(context) {
    this.output.setValue(this.config.value, context);
  }
  /**
   * Gets the class name of this block
   * @returns the class name
   */
  getClassName() {
    return "FlowGraphConstantBlock";
  }
  /**
   * Serializes this block
   * @param serializationObject the object to serialize to
   * @param valueSerializeFunction the function to use to serialize the value
   */
  serialize(serializationObject = {}, valueSerializeFunction = defaultValueSerializationFunction) {
    super.serialize(serializationObject);
    valueSerializeFunction("value", this.config.value, serializationObject.config);
  }
};
RegisterClass("FlowGraphConstantBlock", FlowGraphConstantBlock);
export {
  FlowGraphConstantBlock
};
//# sourceMappingURL=flowGraphConstantBlock-2Z5ESYVT.js.map

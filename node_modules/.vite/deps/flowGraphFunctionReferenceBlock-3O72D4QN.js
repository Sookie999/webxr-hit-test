import {
  FlowGraphBlock,
  RichTypeAny,
  RichTypeString
} from "./chunk-4JKITRJZ.js";
import "./chunk-TROWLGN2.js";
import "./chunk-7XY2OFQB.js";
import "./chunk-SAE7R3H2.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-DDXCXL26.js";
import "./chunk-GCT36VBF.js";
import "./chunk-G3PMV62Z.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/Utils/flowGraphFunctionReferenceBlock.js
var FlowGraphFunctionReferenceBlock = class extends FlowGraphBlock {
  constructor(config) {
    super(config);
    this.functionName = this.registerDataInput("functionName", RichTypeString);
    this.object = this.registerDataInput("object", RichTypeAny);
    this.context = this.registerDataInput("context", RichTypeAny, null);
    this.output = this.registerDataOutput("output", RichTypeAny);
  }
  _updateOutputs(context) {
    const functionName = this.functionName.getValue(context);
    const object = this.object.getValue(context);
    const contextValue = this.context.getValue(context);
    if (object && functionName) {
      const func = object[functionName];
      if (func && typeof func === "function") {
        this.output.setValue(func.bind(contextValue), context);
      }
    }
  }
  getClassName() {
    return "FlowGraphFunctionReference";
  }
};
RegisterClass("FlowGraphFunctionReference", FlowGraphFunctionReferenceBlock);
export {
  FlowGraphFunctionReferenceBlock
};
//# sourceMappingURL=flowGraphFunctionReferenceBlock-3O72D4QN.js.map

import {
  FlowGraphEventBlock
} from "./chunk-SF235G35.js";
import {
  _IsDescendantOf
} from "./chunk-3F6WI3CQ.js";
import "./chunk-AD2B6VDG.js";
import "./chunk-5JDKVHAP.js";
import "./chunk-7AIW3QXJ.js";
import {
  RichTypeAny,
  RichTypeNumber,
  RichTypeVector3
} from "./chunk-4JKITRJZ.js";
import {
  PointerEventTypes
} from "./chunk-MVDNDG2U.js";
import "./chunk-TROWLGN2.js";
import "./chunk-7XY2OFQB.js";
import "./chunk-SAE7R3H2.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-DDXCXL26.js";
import "./chunk-GCT36VBF.js";
import "./chunk-G3PMV62Z.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.js
var FlowGraphMeshPickEventBlock = class extends FlowGraphEventBlock {
  constructor(config) {
    super(config);
    this.config = config;
    this.type = "MeshPick";
    this.asset = this.registerDataInput("asset", RichTypeAny, config?.targetMesh);
    this.pickedPoint = this.registerDataOutput("pickedPoint", RichTypeVector3);
    this.pickOrigin = this.registerDataOutput("pickOrigin", RichTypeVector3);
    this.pointerId = this.registerDataOutput("pointerId", RichTypeNumber);
    this.pickedMesh = this.registerDataOutput("pickedMesh", RichTypeAny);
    this.pointerType = this.registerDataInput("pointerType", RichTypeAny, PointerEventTypes.POINTERPICK);
  }
  _getReferencedMesh(context) {
    return this.asset.getValue(context);
  }
  _executeEvent(context, pickedInfo) {
    const pointerType = this.pointerType.getValue(context);
    if (pointerType !== pickedInfo.type) {
      return true;
    }
    const mesh = this._getReferencedMesh(context);
    if (mesh && pickedInfo.pickInfo?.pickedMesh && (pickedInfo.pickInfo?.pickedMesh === mesh || _IsDescendantOf(pickedInfo.pickInfo?.pickedMesh, mesh))) {
      this.pointerId.setValue(pickedInfo.event.pointerId, context);
      this.pickOrigin.setValue(pickedInfo.pickInfo.ray?.origin, context);
      this.pickedPoint.setValue(pickedInfo.pickInfo.pickedPoint, context);
      this.pickedMesh.setValue(pickedInfo.pickInfo.pickedMesh, context);
      this._execute(context);
      return !this.config?.stopPropagation;
    } else {
      this.pointerId.resetToDefaultValue(context);
      this.pickOrigin.resetToDefaultValue(context);
      this.pickedPoint.resetToDefaultValue(context);
      this.pickedMesh.resetToDefaultValue(context);
    }
    return true;
  }
  /**
   * @internal
   */
  _preparePendingTasks(_context) {
  }
  /**
   * @internal
   */
  _cancelPendingTasks(_context) {
  }
  /**
   * @returns class name of the block.
   */
  getClassName() {
    return "FlowGraphMeshPickEventBlock";
  }
};
RegisterClass("FlowGraphMeshPickEventBlock", FlowGraphMeshPickEventBlock);
export {
  FlowGraphMeshPickEventBlock
};
//# sourceMappingURL=flowGraphMeshPickEventBlock-LLFF3BJV.js.map

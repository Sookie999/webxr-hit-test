import "./chunk-7RFP2FOR.js";
import "./chunk-T5VKEAT2.js";
import {
  ShaderStore
} from "./chunk-FX6MN5HL.js";
import "./chunk-G3PMV62Z.js";

// node_modules/@babylonjs/core/ShadersWGSL/color.fragment.js
var name = "colorPixelShader";
var shader = `#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
#define VERTEXCOLOR
varying vColor: vec4f;
#else
uniform color: vec4f;
#endif
#include<clipPlaneFragmentDeclaration>
#include<fogFragmentDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
fragmentOutputs.color=input.vColor;
#else
fragmentOutputs.color=uniforms.color;
#endif
#include<fogFragment>(color,fragmentOutputs.color)
#define CUSTOM_FRAGMENT_MAIN_END
}`;
if (!ShaderStore.ShadersStoreWGSL[name]) {
  ShaderStore.ShadersStoreWGSL[name] = shader;
}
var colorPixelShaderWGSL = { name, shader };
export {
  colorPixelShaderWGSL
};
//# sourceMappingURL=color.fragment-DNDYWFR4.js.map
